name: Nightly Builds

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: "0 */2 * * *"

jobs:
  GooseMod:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: 15.x
      
      - name: Clean Old Version
        run: rm -rf goosemod.js
        
      - name: Build GooseMod
        run: |
          git clone https://github.com/GooseMod/GooseMod && cd GooseMod
          npm ci
          npm run build
          mv dist/goosemod.en-US.js ../goosemod.js
          git rev-parse HEAD | cut -c 1-7 > /tmp/gm
          cd ..
          rm -rf GooseMod

      - name: Commit Changes
        run: |
          git config --local user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git config --local user.name 'github-actions[bot]'
          git pull || exit 0
          git add ./goosemod.js || exit 0
          git commit -m "Update Goosemod | $(cat /tmp/gm)" ./goosemod.js || exit 0
          git push || exit 0
          
  Topaz:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Clean Old Version
        run: rm -rf topaz.js

      - name: Build Topaz
        run: |
          git clone https://github.com/GooseMod/topaz && cd topaz
          node bundle.js
          mv out.js ../topaz.js
          git rev-parse HEAD | cut -c 1-7 > /tmp/tz
          cd ..
          rm -rf topaz

      - name: Commit Changes
        run: |
          git config --local user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git config --local user.name 'github-actions[bot]'
          git pull || exit 0
          git add ./topaz.js || exit 0
          git commit -m "Update Topaz | $(cat /tmp/tz)" ./topaz.js || exit 0
          git push || exit 0

  Cumcord:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.6.0

      - name: Clean Old Version
        run: rm -rf cumcord.js

      - name: Build Cumcord
        run: |
          git clone https://git.sr.ht/~creatable/Cumcord && cd Cumcord
          sed -i 's/let isEnabled = false;/let isEnabled = true;/' src/api/devmode.js
          pnpm install
          node build.mjs
          mv dist/new-build.js ../cumcord.js
          git rev-parse HEAD | cut -c 1-7 > /tmp/cc
          cd ..
          rm -rf Cumcord
          
      - name: Commit Changes
        run: |
          git config --local user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git config --local user.name 'github-actions[bot]'
          git pull || exit 0
          git add ./cumcord.js || exit 0
          git commit -m "Update Cumcord | $(cat /tmp/cc)" ./cumcord.js || exit 0
          git push || exit 0

  OpenAsar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Clean Old Vers
        run: rm -rf open.asar

      - name: Build OpenAsar
        run: |
          git clone https://github.com/GooseMod/OpenAsar && cd OpenAsar
          npm i -g asar
          bash scripts/injectPolyfills.sh
          sed -i -e "s/nightly/nightly-$(git rev-parse HEAD | cut -c 1-7)/" src/index.js
          node scripts/strip.js
          npx asar pack src app.asar
          mv app.asar ../open.asar
          git rev-parse HEAD | cut -c 1-7 > /tmp/oa
          cd ..
          rm -rf OpenAsar

      - name: Commit Changes
        run: |
          git config --local user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git config --local user.name 'github-actions[bot]'
          git pull || exit 0
          git add ./open.asar || exit 0
          git commit -m "Update OpenAsar | $(cat /tmp/oa)" ./open.asar || exit 0
          git push || exit 0
 
  KernelElectron:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.6.0

      - name: Clean Old Version
        run: rm -rf kernel.asar

      - name: Build Kernel's Asar
        run: |
          mkdir kernel && cd kernel
          git clone https://github.com/kernel-mod/browser && cd browser
          pnpm i
          cd ..
          git clone https://github.com/kernel-mod/electron && cd electron
          pnpm i
          pnpm run build
          mv dist/kernel.asar ../../kernel.asar
          git rev-parse HEAD | cut -c 1-7 > /tmp/km
          cd ..
          rm -rf browser && rm -rf electron

      - name: Commit Changes
        run: |
          git config --local user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git config --local user.name 'github-actions[bot]'
          git pull || exit 0
          git add ./kernel.asar || exit 0
          git commit -m "Update Kernel's Asar | $(cat /tmp/km)" ./kernel.asar || exit 0
          git push || exit 0
